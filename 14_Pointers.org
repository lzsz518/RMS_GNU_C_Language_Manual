#+Title: 14 指针

在高级计算机语言之中，C语言的抽象程度较低并且可以更直接的操作计算机硬件，这主要是因为它拥有显式的指针。
指针变量的值是一个数据在内存中的地址，这个地址中所存储的数据的类型是由持有这个地址的指针的类型决定的。
可以使用一元操作符'*' 获取指针指向的内存地址的数据，这个操作被称为指针解引用。

C语言也允许指针指向函数，但是这与指向数据的指针有所不同所以我们晚些讨论这个问题。详见函数指针章节。

* 数据地址

获取指针最简单的方法是使用"取地址" 操作符 *'&'* 。让我们假设为本拥有一下变量：

#+begin_src
  int i;
  double a[5];
#+end_src

现在， *&i* 将得到变量 *i* 的地址--一个指向 *i* 的内存地址的指针， *&a[3]* 将得到数组 *a* 索引为3的元素
的内存地址。(实际上索引为3的元素是数组的第四个元素，因为索引是从0开始计数的)

取地址操作符并不常见因为它只对存储数值的地方(内存地址，左值。详见左值章节)进行操作而不是那个地址中所存储的数值。
(简单赋值的左参数以同样的原因不常见.) 你可以在任何期望得到位域或(详见位域章节)构造器的地方使用它。(详见结构体构造器)
